# @license GPL-3.0-or-later
# Copyright (C) 2025 Caleb Gyamfi - Omnixys Technologies

name: üß™ E2E Authentication Tests

on:
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  e2e:
    name: Run Auth E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25

    services:
      postgres:
        image: postgres:18
        env:
          POSTGRES_USER: auth
          POSTGRES_PASSWORD: auth
          POSTGRES_DB: authdb
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U auth"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - 2181:2181
        env:
          ALLOW_ANONYMOUS_LOGIN: yes
        options: >-
          --health-cmd "echo ruok | nc localhost 2181 | grep imok"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

      kafka:
        image: wurstmeister/kafka
        env:
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
          - 9092:9092
        options: >-
          --hostname kafka
          --health-cmd "bash -c 'nc -z localhost 9092 || exit 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 15
          --health-start-period 20s

    steps:
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24.10.0
          cache: 'pnpm'

      - name: üì¶ Install dependencies
        run: |
          corepack enable
          pnpm install --frozen-lockfile

          
      - name: üöÄ Start Keycloak (26.3.2)
        run: |
          docker run -d --name keycloak -p 18080:8080 \
           -e KC_BOOTSTRAP_ADMIN_USERNAME=admin \
           -e KC_BOOTSTRAP_ADMIN_PASSWORD=admin \
           -v "$(pwd)/__tests__/keycloak/camunda-platform-realm.json:/opt/keycloak/data/import/camunda-platform-realm.json:ro" \
           --tmpfs /opt/keycloak/data:rw,size=200m \
           quay.io/keycloak/keycloak:26.3.2 \
           start-dev --import-realm --http-port=8080


          echo "‚è≥ Waiting for Keycloak..."
          for i in {1..40}; do
            if  curl -fs http://localhost:18080/realms/master >/dev/null 2>&1; then
              echo "‚úÖ Base realm 'master' available (after $i checks)"
              break
            fi
            echo "waiting for master realm ($i/40)..."
            sleep 5
          done

          echo "‚è≥ Waiting for imported realm 'camunda-platform'..."
          for i in {1..60}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" \
              -H "Accept: application/json" \
              http://localhost:18080/realms/camunda-platform || echo 000)

            if [ "$status" = "200" ]; then
              echo "‚úÖ Realm 'camunda-platform' reachable (HTTP $status after $i tries)"
              docker ps
              exit 0
            fi

            echo "Realm not yet reachable (status $status, try $i/60)..."
            sleep 5
          done

          echo "‚ùå Keycloak did not become ready in time. Dumping logs..."
          docker logs keycloak
          exit 1

      - name: üß™ Run E2E Auth Tests
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://auth:auth@localhost:5433/authdb
          REDIS_URL: redis://localhost:6379
          KAFKA_BROKER: localhost:9092
          KC_URL: http://localhost:18080
          KC_REALM: camunda-platform
          KC_CLIENT_ID: camunda-identity
          KC_CLIENT_SECRET: b5qpOgD5Z6wB4PjtL4NP0rPcwZ6rK7gG
          KEYCLOAK_ADMIN_USERNAME: admin
          KEYCLOAK_ADMIN_PASSWORD: admin
          TEST_EMAIL_DOMAIN: omnixys.com
        run: |
          echo "üîß Loading CI environment variables"
          cp __tests__/.ci.env .env
          echo "‚úÖ .env.ci ‚Üí .env erfolgreich kopiert"
          pnpm run build
          pnpm run test:e2e:auth
