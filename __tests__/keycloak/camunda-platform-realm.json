{
  "id": "camunda-platform",
  "realm": "camunda-platform",
  "displayName": "",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "76eedfa3-64b5-41d5-a0b8-1201c861d1a4",
        "name": "ManagementIdentity",
        "description": "Provides full access to Management Identity",
        "composite": true,
        "composites": {
          "client": {
            "camunda-identity-resource-server": ["write", "read"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      },
      {
        "id": "8039c006-eec9-4de5-ba19-eca675b36b4d",
        "name": "Default user role",
        "description": "A default role that is applied to all users, including service accounts",
        "composite": true,
        "composites": {
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      },
      {
        "id": "653eee91-dc38-42e7-b112-c5f8cdb78683",
        "name": "Web Modeler",
        "description": "Grants full access to Web Modeler",
        "composite": true,
        "composites": {
          "client": {
            "web-modeler-api": ["write:*"],
            "camunda-identity-resource-server": ["read:users"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      },
      {
        "id": "f3378239-7433-46d6-b5d7-77aabd049091",
        "name": "BASIC",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {}
      },
      {
        "id": "48b275b5-b831-4e05-8e80-6c63046439e8",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {}
      },
      {
        "id": "92283bb7-5a41-459b-8050-d733bcb047b7",
        "name": "ELITE",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {}
      },
      {
        "id": "c6a95c40-2c47-4a15-a926-de7711c499f1",
        "name": "Orchestration",
        "description": "Grants full access to Orchestration",
        "composite": true,
        "composites": {
          "client": {
            "orchestration-api": ["read:*", "write:*"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      },
      {
        "id": "f7546cf2-698e-4f12-b04a-2a470d0a558b",
        "name": "Optimize",
        "description": "Grants full access to Optimize",
        "composite": true,
        "composites": {
          "client": {
            "optimize-api": ["write:*"],
            "camunda-identity-resource-server": ["read:users"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      },
      {
        "id": "c948fc7f-edd3-4ab6-a4f6-42de770902dd",
        "name": "realm-admin",
        "composite": false,
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {}
      },
      {
        "id": "f55df9da-a5d6-49cf-b6ab-2997e888b728",
        "name": "Console",
        "description": "Grants full access to Console",
        "composite": true,
        "composites": {
          "client": {
            "console-api": ["write:*"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      },
      {
        "id": "c8bdfc9c-1137-4852-afbc-caa6e49b7833",
        "name": "ADMIN",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {}
      },
      {
        "id": "52718a38-6704-4818-b16b-06367b100676",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {}
      },
      {
        "id": "1ea5a514-a785-44aa-abf9-5a517a06ebae",
        "name": "Web Modeler Admin",
        "description": "Grants elevated access to Web Modeler",
        "composite": true,
        "composites": {
          "client": {
            "web-modeler-api": ["admin:*", "write:*"],
            "camunda-identity-resource-server": ["read:users"]
          }
        },
        "clientRole": false,
        "containerId": "camunda-platform",
        "attributes": {
          "camunda_role": ["true"]
        }
      }
    ],
    "client": {
      "console": [],
      "connectors": [],
      "realm-management": [
        {
          "id": "959377ef-9c70-43c8-9f7f-35711cee9c4b",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "02727267-7523-4e10-8e37-ea42efa853de",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "5c18325d-fc68-41ad-82f8-dfaa1ea089ee",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "bb34cf88-e921-41c2-97ee-e376e9aa7e94",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "db1ab9c6-ff34-485a-8466-27fbcdf77d12",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "f821bb73-dec9-477f-b60c-adf993550a17",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "f717362c-332f-4d3c-993a-b9a1b9c18d37",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "5ec9c2bc-cba5-4d93-9c46-2f34c98a1d99",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "e8822768-d2b2-4105-a587-c6673c7a472f",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "5909c5a1-4797-40a8-ad77-6e07ac659f85",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "ce1d1a2e-7f4f-4356-b337-a7f311c57d71",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "20996266-1058-4f6d-a76e-ff0c4c5e7bd2",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "70e51036-9bfc-487d-9569-7ac140147279",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "31b48947-69d9-445c-b812-23d6b09d85c9",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "a0cc381e-c490-4089-802c-f45534b8e36e",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "3831e3eb-17cc-437f-b812-0fa54f25d7c9",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "c58738f5-efb0-4c08-994d-7cda4a3a518e",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-users",
                "query-realms",
                "impersonation",
                "manage-users",
                "view-identity-providers",
                "manage-clients",
                "manage-identity-providers",
                "view-realm",
                "manage-events",
                "query-users",
                "query-groups",
                "query-clients",
                "view-clients",
                "manage-realm",
                "create-client",
                "manage-authorization",
                "view-events",
                "view-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "ba4277f9-e8de-40b6-8050-2eca64fd4723",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        },
        {
          "id": "51806523-eb42-4282-990a-550f5f8a6c02",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
          "attributes": {}
        }
      ],
      "orchestration": [],
      "security-admin-console": [],
      "web-modeler-api": [
        {
          "id": "50e005ac-3dca-4a26-baef-196367015286",
          "name": "admin:*",
          "description": "Admin permission",
          "composite": false,
          "clientRole": true,
          "containerId": "e3feba67-a639-4533-b733-c84a3db7a131",
          "attributes": {}
        },
        {
          "id": "0462cee4-aebe-4e96-8be6-c33181d61021",
          "name": "write:*",
          "description": "Write permission",
          "composite": false,
          "clientRole": true,
          "containerId": "e3feba67-a639-4533-b733-c84a3db7a131",
          "attributes": {}
        }
      ],
      "account-console": [],
      "camunda-identity-resource-server": [
        {
          "id": "b50273fc-088a-4915-a346-f811ddb8de53",
          "name": "read:users",
          "description": "Read users permission",
          "composite": false,
          "clientRole": true,
          "containerId": "e7cbe8f8-bfa9-441b-a27e-d1ec96172560",
          "attributes": {}
        },
        {
          "id": "3b303634-edba-4131-bc97-5d95ff27e28e",
          "name": "write",
          "description": "Write permission",
          "composite": false,
          "clientRole": true,
          "containerId": "e7cbe8f8-bfa9-441b-a27e-d1ec96172560",
          "attributes": {}
        },
        {
          "id": "7e9da07f-48a5-4837-8206-eee98d1d8d9e",
          "name": "read",
          "description": "Read permission",
          "composite": false,
          "clientRole": true,
          "containerId": "e7cbe8f8-bfa9-441b-a27e-d1ec96172560",
          "attributes": {}
        }
      ],
      "broker": [
        {
          "id": "7e368c90-a232-4cea-b686-95541c42417a",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "df8251eb-430a-49f8-a3b3-98d83f4a7422",
          "attributes": {}
        }
      ],
      "web-modeler": [],
      "camunda-identity": [],
      "optimize": [],
      "console-api": [
        {
          "id": "16d161f0-e4b8-4f32-b320-5b4315ba4086",
          "name": "write:*",
          "description": "Write permission",
          "composite": false,
          "clientRole": true,
          "containerId": "29e11313-610d-40e4-b885-e52093583c41",
          "attributes": {}
        }
      ],
      "orchestration-api": [
        {
          "id": "e14b0df5-1ab1-4579-8101-44ff24f03e0e",
          "name": "read:*",
          "description": "Read permission",
          "composite": false,
          "clientRole": true,
          "containerId": "c8f34c9b-a6cb-4b46-b013-55417b1bc498",
          "attributes": {}
        },
        {
          "id": "e8523918-a58b-48eb-96e0-16ddcd0146ce",
          "name": "write:*",
          "description": "Write permission",
          "composite": false,
          "clientRole": true,
          "containerId": "c8f34c9b-a6cb-4b46-b013-55417b1bc498",
          "attributes": {}
        }
      ],
      "admin-cli": [],
      "optimize-api": [
        {
          "id": "b0484b5d-f72a-481e-830d-e222cfc11b1b",
          "name": "write:*",
          "description": "Write permission",
          "composite": false,
          "clientRole": true,
          "containerId": "1c8fd00a-73af-477f-9416-56a18e646d74",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "ff48c1da-da2f-4e10-9ec2-c52e75b2e832",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "e76b7b65-63b9-4870-8d9e-d2e2da06b344",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "4114360f-77e4-4d99-9496-5182316cd708",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "2bf80751-7ccb-4d1e-aa31-b7c0a8dca61c",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "1ea8ac12-92f6-47bd-9a29-2be80751bf84",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "5fd0df58-a146-4c10-9700-133511c24b62",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "9c01e74b-a812-41e8-8c1b-65d1e128eabd",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        },
        {
          "id": "13a68eb0-7a4f-499d-96ee-92de08118d1f",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "8039c006-eec9-4de5-ba19-eca675b36b4d",
    "name": "Default user role",
    "description": "A default role that is applied to all users, including service accounts",
    "composite": true,
    "clientRole": false,
    "containerId": "camunda-platform"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "dde8114c-2637-462a-90b9-413924fa3f55",
      "username": "admin",
      "firstName": "NewMe",
      "lastName": "Updated",
      "email": "me@omnixys.com",
      "emailVerified": true,
      "enabled": true,
      "createdTimestamp": 1761420075722,
      "totp": false,
      "credentials": [
        {
          "id": "b7f4ace3-a978-4b92-bc20-fe4ea81e0fe1",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1761420103110,
          "secretData": "{\"value\":\"N2P3IiHYnbsBTIn8+KF7VLVtdYvlG0lCoTAUcOeSgb4=\",\"salt\":\"V9vTkQdKaRTdc+TS2RbzJQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role", "realm-admin"],
      "clientRoles": {
        "realm-management": ["manage-users"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a22c88c5-52af-467f-b6dd-836845c5e860",
      "username": "demo",
      "firstName": "Demo",
      "lastName": "User",
      "email": "demo@example.org",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341234172,
      "totp": false,
      "credentials": [
        {
          "id": "9c8e9dfd-6125-4f0e-afa7-f3a9dced8966",
          "type": "password",
          "createdDate": 1761341234202,
          "secretData": "{\"value\":\"kYIzDXnRWajnSXxWvWf/dAiudw75iNGwQv57TF+32TA=\",\"salt\":\"dKCkPKcyHk0sUcrNHE8yEQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "ManagementIdentity",
        "Default user role",
        "Optimize",
        "Web Modeler",
        "Console",
        "Web Modeler Admin",
        "Orchestration"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "aff70f85-cb0a-4be1-8275-c4a489a0ff15",
      "username": "service-account-camunda-identity",
      "emailVerified": false,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "camunda-identity",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["realm-admin"],
      "clientRoles": {
        "realm-management": ["realm-admin"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "61b5dc07-e69d-4e52-906e-59203a45c2be",
      "username": "service-account-camunda-identity-resource-server",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341232709,
      "totp": false,
      "serviceAccountClientId": "camunda-identity-resource-server",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f5dce782-7efc-487f-ba36-437d61cde762",
      "username": "service-account-connectors",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233544,
      "totp": false,
      "serviceAccountClientId": "connectors",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "clientRoles": {
        "orchestration-api": ["read:*"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "5bd5e04e-6e20-4126-a0d8-34ec20dce23f",
      "username": "service-account-console-api",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233082,
      "totp": false,
      "serviceAccountClientId": "console-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "db637beb-442c-4d94-8309-ce7da503b97b",
      "username": "service-account-optimize",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233481,
      "totp": false,
      "serviceAccountClientId": "optimize",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f0e6ad45-f8ac-4387-ada2-96f83146e1b8",
      "username": "service-account-optimize-api",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233246,
      "totp": false,
      "serviceAccountClientId": "optimize-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "4fdb4023-cf75-42ab-938f-5dd1a56cb56a",
      "username": "service-account-orchestration",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233414,
      "totp": false,
      "serviceAccountClientId": "orchestration",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a753e77b-6362-4112-a7e5-ac41606b353b",
      "username": "service-account-orchestration-api",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233168,
      "totp": false,
      "serviceAccountClientId": "orchestration-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "632411d2-b508-45a9-90ff-8010da0c4590",
      "username": "service-account-web-modeler-api",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1761341233314,
      "totp": false,
      "serviceAccountClientId": "web-modeler-api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "4bae06a0-7d93-4eab-8943-dc7b01f8fb8a",
      "username": "user",
      "firstName": "User",
      "lastName": "Omnixys",
      "email": "user@omnixys.de",
      "emailVerified": true,
      "attributes": {
        "roles": ["ADMIN"]
      },
      "enabled": true,
      "createdTimestamp": 1761659749205,
      "totp": false,
      "credentials": [
        {
          "id": "4b3dcd7a-7bb7-4127-a99f-6a503b387e57",
          "type": "password",
          "createdDate": 1761659749226,
          "secretData": "{\"value\":\"B6Ziac+iBJ22jPoI0DAPnWtHdHxY4bMVwQZtA4ljp4s=\",\"salt\":\"65NT5zMyIwKoRvjuhytgRg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["Default user role"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "da54b877-19e3-4e47-92b8-8f11e03f2a7c",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/camunda-platform/account/",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/camunda-platform/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["acr", "basic"],
      "optionalClientScopes": []
    },
    {
      "id": "851966dc-d5fc-4476-9693-70de6cf0e983",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/camunda-platform/account/",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/camunda-platform/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "de6e969e-4280-404a-a86b-a80539f75747",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["acr", "basic"],
      "optionalClientScopes": []
    },
    {
      "id": "1462c384-fc2d-4227-a8e9-00d860de804d",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["acr", "basic"],
      "optionalClientScopes": []
    },
    {
      "id": "df8251eb-430a-49f8-a3b3-98d83f4a7422",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "9cc813a5-c334-448e-bc0f-cf5eb04aa951",
      "clientId": "camunda-identity",
      "name": "Identity",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "b5qpOgD5Z6wB4PjtL4NP0rPcwZ6rK7gG",
      "redirectUris": ["http://localhost:8084/auth/login-callback"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1761341232",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "d3b00f17-8477-4f0b-b1b2-14b68c0e8453",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "aa0935c2-f1dd-4dee-9c5e-9a4b61e48b72",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "3af32e4c-27a2-4aa6-9276-3d5d365c683d",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e7cbe8f8-bfa9-441b-a27e-d1ec96172560",
      "clientId": "camunda-identity-resource-server",
      "name": "Camunda Management Identity Resource Server",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "wXAmPAThmfw5suq5MLUhLRgWrgkK9CkO",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.secret.creation.time": "1761341232"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:camunda-identity-resource-server:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:camunda-identity-resource-server:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "a712c76f-36ef-4691-9c8d-cb94ab35f280",
      "clientId": "connectors",
      "name": "Connectors",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "demo-connectors-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "666dd63f-7331-4b83-b303-7ed55b7542cb",
          "name": "connectors Audience Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "connectors",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f508b570-6a99-4bfd-84ec-8a946d2dda05",
      "clientId": "console",
      "name": "Console",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:8087/"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "d8a7fa3c-7466-4aa9-83dd-aba4836d553d",
          "name": "console Audience Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "console",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "29e11313-610d-40e4-b885-e52093583c41",
      "clientId": "console-api",
      "name": "Console API",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "OUEDqH9MAWVMmPndAQCDMExGlNKpmLKF",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.secret.creation.time": "1761341233"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:console-api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:console-api:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "5e6f3905-c956-4792-8448-963a47e75a05",
      "clientId": "optimize",
      "name": "Optimize",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "demo-optimize-secret",
      "redirectUris": ["http://localhost:8083/api/authentication/callback"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8eb55032-9aa8-452d-b09a-cbf57c58307b",
          "name": "optimize Audience Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "optimize",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1c8fd00a-73af-477f-9416-56a18e646d74",
      "clientId": "optimize-api",
      "name": "Optimize API",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "eQSIGyhDrSPq7Nzw5G6uuUxVnKmxdxvy",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.secret.creation.time": "1761341233"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:optimize-api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:optimize-api:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "f4814521-d048-4c88-a06b-a826f07836b4",
      "clientId": "orchestration",
      "name": "Orchestration",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "secret",
      "redirectUris": ["http://localhost:8088/sso-callback"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "20f2236f-2a13-4980-85df-e8cd3175c507",
          "name": "orchestration Audience Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "orchestration",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c8f34c9b-a6cb-4b46-b013-55417b1bc498",
      "clientId": "orchestration-api",
      "name": "Orchestration API",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "yRmmuImcYVIOTLpDr12agNDLWLUZIoiy",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.secret.creation.time": "1761341233"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:orchestration-api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:orchestration-api:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "93fa8c61-8e00-4df0-86c6-28eca6b9ba7b",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "2b4cd135-30c0-4230-bc44-8e95110fc744",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/camunda-platform/console/",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/camunda-platform/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "b69d0745-4b01-4a30-9f70-cd561182b9b6",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["acr", "basic"],
      "optionalClientScopes": []
    },
    {
      "id": "31cfbab7-5709-44d5-abc0-039b1abd1ead",
      "clientId": "web-modeler",
      "name": "Web Modeler",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:8070/login-callback"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f58fb4b4-7ce3-4549-a5cb-43cb43795d56",
          "name": "web-modeler Audience Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "web-modeler",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e3feba67-a639-4533-b733-c84a3db7a131",
      "clientId": "web-modeler-api",
      "name": "Web Modeler Internal API",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "Aftm8CxnD8574XY2nR4cmp6qvfuIGqy3",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.secret.creation.time": "1761341233"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "roles",
        "profile",
        "basic",
        "camunda-identity",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:web-modeler-api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": ["/*"]
          }
        ],
        "policies": [
          {
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:web-modeler-api:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    }
  ],
  "clientScopes": [
    {
      "id": "c9ad4dfd-3f2d-4706-abcd-87926776afc8",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "88777f44-61f0-4697-8847-33752c311ae9",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "fbf367f7-3007-49fa-9a76-6017a51f2446",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "dd61b2ec-a43c-4426-917e-d21a50d93a6a",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "96607577-9a58-4600-80fc-230af0d74c33",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "92303584-8bba-450b-bc00-dcc3e1013d41",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "f968d51a-e462-44b1-a3ca-263701feafd7",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "8d88d1a5-7c28-4d42-a851-8819eca12341",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "45a06404-77f3-4b33-9f92-a2fa82ca6b33",
      "name": "camunda-identity",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cf5300b7-37e7-4c80-9a49-2467c8c27cba",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "2d02ceb1-4f68-4187-8ee1-1253b840d100",
          "name": "permissions",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "access.token.claim": "true",
            "claim.name": "permissions.${client_id}",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "8a1813ce-c7ba-475d-8fad-b73219ddbfc4",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true",
            "multivalued": "true"
          }
        },
        {
          "id": "75acc43c-e8f5-4bb4-b369-ec781f60b990",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "0e4fd2e6-6be9-4ebf-a9e5-10051e3e092e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d4ab0e26-528c-4e76-b5bd-ebad3a27ae89",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3376d99c-0801-4b17-ae18-724732839b97",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "37cdb749-225a-4c92-bb4a-71dbb6cd3288",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "4f872a00-74a3-45b6-b79f-d2fcb3668da4",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3528815a-e26e-4e34-9438-efede87801ad",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "d8a904cb-714a-46b6-8429-6c9d127e9dec",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0649bc08-6127-4221-ba6c-6e57b32342f2",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd8f259b-2611-4e76-96c7-e864e0c62b85",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c7045d9-c4a6-4ec8-854d-6a654686d592",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "826cc254-3066-4ef9-9b77-7bb6e86ea40b",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9178eb91-98ec-4e78-bd4b-4a27afa05f05",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "033965cd-be4e-4ebb-8574-25ca9a040abc",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "07bbaef8-f69a-40c7-8bc1-9b5bdad0c513",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "db114f96-4292-4aad-b587-be4e58103db5",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "f6b011c9-9901-4b9e-ac94-41532c8b95b8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "3fd9fcc5-00a3-4481-a561-878f1c789b2d",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "1fcd03b9-7d5c-45ac-890b-68992ce1e05a",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b9c768c0-b656-418f-8cdc-79afe7971f95",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "b849639c-2f61-4bc1-901b-0598793a4a0a",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "1c9541cf-e2b4-4e8d-838d-00d34c7f9a1a",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "8f06babf-720b-4775-8331-c82e07e59bdd",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "78888420-2adc-4146-bfcd-29551875960d",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e1fed64d-7a7e-41d5-bbc3-c3adbb3b24ac",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "f0823adc-0c2a-4b5f-9501-3008776164cd",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "d4360f1d-31d5-4622-a675-107e8bd3d0ef",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "eec7a68e-c7db-48a1-9986-7e87def694db",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "87a9d0fa-d60a-4a9a-8e88-626d94fc2ea3",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "91734bab-9b42-4e88-85c9-05af8d18dbbd",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "f1662825-c2fe-4087-817c-d9d3dc531be8",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "c5813a7e-32fb-4e48-9513-c20191160574",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "77663bc8-aebc-4ae9-a2ad-aa33325aeca9",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "80a14810-dc12-4e84-92db-7314debffb93",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "478caecf-b110-41cc-8697-d0a6db039274",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "4235c88f-1d3b-4277-a4e1-4d59cc32acd6",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d0705c65-3d8c-4ce4-a38c-38cf9924fa87",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "c7cdc9c3-0bac-4f6f-bea6-419864f16166",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "roles",
    "role_list",
    "email",
    "profile",
    "web-origins",
    "acr",
    "basic",
    "camunda-identity"
  ],
  "defaultOptionalClientScopes": [
    "phone",
    "address",
    "offline_access",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "identity",
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "98755e2e-ba4a-4e25-b969-30eeca74af5e",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "bbce2277-43b7-461f-99bf-6f73165d4b19",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "f100d043-f4f6-45f6-8e4f-3f9ba5433c41",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "5f1d5181-e302-4e65-a30c-c4472f985091",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "99cce876-cb59-4fd4-8b69-4b89d75a43b5",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "9e07c691-72c0-4ad2-b55e-3f2b6939495d",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "a9a5a541-cd2b-4eaf-adf4-1d2d2e7fc1ad",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "5e20166d-36e0-4194-bbc8-9940539e9792",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "f8b10b57-e28e-4697-b456-ef34d43eb5ac",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "211d3c02-b990-4dbb-b9ef-f3895b927511",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["32752456-17c3-4e9c-b95e-8e75f107c6ad"],
          "secret": [
            "XMCPwdAdYuiSJqn6INqdj8kj6eDDC7xeKfuEu5PBh9TGBiFSGzoOUJvKwef2UUFanJ-GJ_OpxJ9JF66xcbpNsUzmKwl42vqO6yLHl3_F0gXXjX_9-pqU7AAwHtpz7DQ7mk114dVa20096Qhmk6b6EAZkk5ClYo2sOh5fGqXIdp0"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "dba9cb21-3872-4b9b-bfcd-1858bc350b49",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["aa3ded92-ac09-46bd-8f67-8cc8918839a2"],
          "secret": ["_p6PDug2hgFnM3irh58STg"],
          "priority": ["100"]
        }
      },
      {
        "id": "fdcaa761-21b4-4d9c-b76b-11b713d3060c",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAnGZsQe8qWXCEBqd8Ha4kXT+xHsgsgGBVvZyh5N8KLpNb20MVxqy/hEcVuCKtinDY+GmMW1C3VSYzqczpof41l9QdJHmaunB0hYyaMAdAx5QS25JTwExh0PyAt2GH9kpm/2I0HEtPesKHnG6AXciFDm4+ekfliYJLfs3uIaVOqOyeZPnLrNqmhZ5QK3sMB7irFHAWENXqYg/Mj0KB80N0hcYEi8Q5hk2pGxmZXqC4yNOFEn/OI6bF96q3cMCQIL0WfTaPmMUj/Pu8v1ZyXoYdAe/Fnpi1CWSWGdWMoVP34v1dfi875yjbR8X0GZa4gMGFMPBrZ7cS5rqjeixBD91wuwIDAQABAoIBAEtAtvc0qiZVzpjbDovDZijeBA3BGDR+5dJxoq4aqW4GpkyGZ1xsc0wk3ez29pRlvugr9QZc/JGCa5pYh9PTmprey1TpFAuAH3jA0dGpM8Cz3Sz8J8MfnXMug4p46bAWVZ+s81Dn5aq2HgUlYCt/15G9dt9kZ6v13vh5Aor63LHHQ6jOFI17QBr4zbQJWZ3VEeJBH/3vBWZ+0lg9MeHbJi7t0Kx0/P0r4CtT7huYf3uDSxQZ880mBrTabpZPtAuKu1pggtPLfKhV50SAZGt6ut7f62tnhVkHgJruv9MzZzuLTnPUdP+Gejuzg1c1AUW0fCE8ChXRfqv23+PSuXOF8bUCgYEA0IMxNODGV+ELCnsKCUG050QfInhUgJtS9JU/UPlH3eWs3YO3fA8ET+wkrTA2XB/ZM1Pwr3HJBb9JgnMkvZP97+DEgX8A71+Pnu/Ykv+LFrqmqgSsoNEOJ4u2xjUZZQ9XLcPtPd9KwyfeL0eDWP2NfwQRpyWsELsO3Q1041GyjOUCgYEAwATyPMKXL70SuY9HDdAe267gbNa4a6COJfDRb+CHBU5oSQZbFBygPYjkGQsI67rLnBGX4mtV2+WMDEqYwUBsf65DKW24RJO5dpPL0UU+gnCNh+v5jrWWuFChAvpa21Dg4t2w6SFTr7q0PL0xRe0C+4WwB99w4KupFLuQmEMPzR8CgYBcQb/S2qVHmr3s3DW7lMP7E2wHL2CMKq1QpHyIUlOW/Zk3xaC4llhdGGm96zgSGNFcYYZ7ygecsF9RBas66jEQIs4vUcdTImAEfbDAkaqz2tAFJ95NpVHy82FiX3ol+dyj1i2xE4wbvxcSqjyWclFZ4q4A260/FdTkv6B5N9uddQKBgQCF+i2GhYN1lKfe/wBlu+P8Bg2jA0KUHedww5FuTSwIYMfUw/GCm+KWbNAyRQfJaoEseP4PxjKXBpfr75SbqjbJ86361wpuFuCdwsvATV8rJhsqTlTG5R6vpdpiOIpyYgE3adVJJK6+ezfM9XjOwGuHUaUcKSQaLsv/oktmYcxBowKBgQC7v2NuqZrvGlBoEfKHYDyC3DeqqvnN0clnqbRk2lrcXEENwEZQhwuQpU3tBqkKTgc8CCHo0bhzYnEiILl793alE7iDM09tBeFGKRBPdQxefica6UyKdoPk81RmmGZ4QZgKXgHILd2853H5OyjDq8A+xhj+SkZdnofkkhn0zL2JvA=="
          ],
          "keyUse": ["sig"],
          "certificate": [
            "MIICrzCCAZcCBgGaGB5TnDANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBjYW11bmRhLXBsYXRmb3JtMB4XDTI1MTAyNDIxMjUzMloXDTM1MTAyNDIxMjcxMlowGzEZMBcGA1UEAwwQY2FtdW5kYS1wbGF0Zm9ybTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJxmbEHvKllwhAanfB2uJF0/sR7ILIBgVb2coeTfCi6TW9tDFcasv4RHFbgirYpw2PhpjFtQt1UmM6nM6aH+NZfUHSR5mrpwdIWMmjAHQMeUEtuSU8BMYdD8gLdhh/ZKZv9iNBxLT3rCh5xugF3IhQ5uPnpH5YmCS37N7iGlTqjsnmT5y6zapoWeUCt7DAe4qxRwFhDV6mIPzI9CgfNDdIXGBIvEOYZNqRsZmV6guMjThRJ/ziOmxfeqt3DAkCC9Fn02j5jFI/z7vL9Wcl6GHQHvxZ6YtQlklhnVjKFT9+L9XX4vO+co20fF9BmWuIDBhTDwa2e3Eua6o3osQQ/dcLsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAIVv4HWGFukUkzhGXMDmDHn+UEQzNBMeuiZcQvNdrpeaMom4qEq4uUAHcxVh/XdzlWURmOuLd7T6ooystwuyQEAgrmE6nmzjy31r6un7uTxiDesll4uUcLAHVGd4s9N5PCajHaBGlmuAUc463SFGCpja5ATx+mBr0gnnQDc+QQmv4GC+ec9+D+VfLdzFAVXwptHl7DYWHQUvHfDpPjqPZvQCS+8nnIBW0Yd2sIVkGrPW7aR1AzEmhnPMyRSP0EYzlHd0mY9T9qNxu9AKVtW4snHWOuoawPbfr4MqDHGmXzbM8C4p3ogtgJ2Kp3eW1z/4K+jTWsRZyPlbDnHnneDIwqw=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "b8ca6152-8fca-483c-ba34-8ee95fb0db2b",
        "name": "rsa-enc-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAmUZhSyOoS1OD92BDU4qxMn9vbXEtvRGwsGq58oGwyk3/jJ38RRKwmR+uqJwpNzJCFSLhLqQXuA7EPLMdDgrsGYgtTevQAHOMYMPrbxeOUZp5WuRXMj4kJhSC+Kyq0G80SStI6dgO09Z/wdc0tnxKNb3n+eau/XItizn1LA7Sbk61ex13riT7Jn8PpjAbpRyv1Ay1CWcBeL6tZPvm2+T8xJP/jMvjh2xIX1fxL1CNylaO7C9Jt8jEufaPpL0QfSnyKjsbcVmG45eeNmiLWymCHigDH3nwnmWNwmkn0pISK/Jag0D9xqbCJAOBSlSL+v3gTDA/L03MUPgWnbaYupWS1QIDAQABAoIBABVtLsWrvueEzcJjnRXNIhc+lEuW0j+HfQ00Zjkd4yJsw+ga37yiL7jAIpDkf6h9KJq+zP7RppUuz0Ty/wFLCpVJIZguel3NyVZvnPZjMxx6PTO1DvFxmWkPXf24WYqYuRTvbZpu/yei6SomVPKbrl4T5Z1cH6NDdlVrrTfS/Jy5wZMvHKY4cSFVSiEe35420MW0KRAmyOeoL8W8uAdLkQHxSd98IVBzStR1XU+yCsIaAnjMwtlTXYW79GmRvWIaw03aJW0Tez3TDf6wpWHqYEZDOHCVFd9j9MU5XRH6AbuOeALoK/vvxBlvVxZiVfcZP/nnKu3LF1O78C6i6QQCJDMCgYEA0R6HG+toBPJ1x2EWCA0MK2A323U3UuR3ks1x4KjG6kluBv+LgN+qWTz+MAsnP9QntlQkv/2cF8+QgCZ/8NeJElXpfWvRZRWuU7no0n+7YhHlaOD/HvJ7J73jfdP/6DAUZ31tRe7XWBrX99hE0HfB+/XmORy62ErTvIPrZShXdkcCgYEAu6LqKgpv+Aoxnn2aQiwtqY9tU9lLKY7eQ30a9Q5lzrR6qEqw7ndJk2BSoqrvRKcRnZj4grYMA6l1sMeSK2bApeoLwH9BEGa5MS1VF85KK9Jupic+kzvI+WJWStpXNlxgZj/RUW3F/xQKpbe2KlKQrtX8GGd+CNUbyi2aT5YfUAMCgYBJIMnSo6G+iSNS08qmihmFWaJu5jCwliCSf7GhBKR67a7CV77rFEw35LJnDp9tHL2+bvJjCUb6tKUti0kWaekPNmfuajPRi6FougyHABABHY0B/hx5MAaNQUQ6jlZhVd7sydnaqMk5kDmR/FkkJZz6hWU696cHWDNvKxq4R0E+pQKBgHXw31NxoBO/BJVkydOSRVlxR/0Odoo2vUqalpk2ZZPaKcciu7gIzvyN7SNGYoM6qH3xKzOuDjs3Bz0JFL2nJqyjQqPK2TDgAMQChJwkFMcazGYwAMs3JwpqX2dJesw2oHlk38NZRr0g8dhcc2qC32KmKoGEe9o9aexZYcdoy2HVAoGBAIfP1tt9XdMe2C2rq9P28YqncaUtOkvEEhC9uzykO0zTPPFwSwzLf+ddRTg3OVQfjLORZws52E+gyCRJFf29b4o4KmyOKARIyP5+MyUX0PvKzrv8ZA+ouzsgxvyubdNDrlFDPJWzjMTfLZ+grS9+hUxiXjeypCIOj6D0lM7Z+q2k"
          ],
          "keyUse": ["enc"],
          "certificate": [
            "MIICrzCCAZcCBgGaGB5TQzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBjYW11bmRhLXBsYXRmb3JtMB4XDTI1MTAyNDIxMjUzMVoXDTM1MTAyNDIxMjcxMVowGzEZMBcGA1UEAwwQY2FtdW5kYS1wbGF0Zm9ybTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJlGYUsjqEtTg/dgQ1OKsTJ/b21xLb0RsLBqufKBsMpN/4yd/EUSsJkfrqicKTcyQhUi4S6kF7gOxDyzHQ4K7BmILU3r0ABzjGDD628XjlGaeVrkVzI+JCYUgvisqtBvNEkrSOnYDtPWf8HXNLZ8SjW95/nmrv1yLYs59SwO0m5OtXsdd64k+yZ/D6YwG6Ucr9QMtQlnAXi+rWT75tvk/MST/4zL44dsSF9X8S9QjcpWjuwvSbfIxLn2j6S9EH0p8io7G3FZhuOXnjZoi1spgh4oAx958J5ljcJpJ9KSEivyWoNA/camwiQDgUpUi/r94EwwPy9NzFD4Fp22mLqVktUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAY+PjIhIIDruqmN+S9crnavF7OfC2SwYMuzRXQ+qLbXVwqDpJdF3HYJy5sThmiK/uktg4+5vnGnEhBeW40/aacxaG7qPHfIEfhzxsKD/M9xVAhOn+wr+xqbIOoCQP+3Gc/cZ2EU4+e8DDCRzAFoDgjR+boauhUpThK4eYknYWV6WMI3hQavp4PXbRFjDRzwD4tyy+jf+hAA6P4NgSxhSQb4AQvg/2ovOrs4CLqMrJrrfDmB0W3QNND8YQDhlybgdVpnJn2J+uTGTAoZ+fQNjtzwQfwxZYwJjClfVX22Mlb7KVSyuqQ64uWPhkcBm6uyKXSZdpXswJHHxGdHzKSZvIQA=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "fb706f5c-2f46-47bc-96b6-315233dade79",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["11e764ff-76c5-444e-bdf9-b811aa2f6b31"],
          "secret": [
            "gNstO8UXoR3hvwZfx3ZBNI-2veWcTbXf2vROFOJ_B0J9C_vK0c5gsksAVv6Jl6gNeEdVDyVc2UuDHtPWxeaFEst98FFATcNC2xtzeCg3QqkxP1fKPNDMydQaH3o0qAihi2UPQPoQ8ZtbJq9wxSzRB1J5XLCmLqktUgC2L-op1gs"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "authenticationFlows": [
    {
      "id": "b98f64ac-33f2-47bf-8d4e-93a5c7161a06",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9445ec9b-48d2-45a5-9b17-e29a1f48fbac",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5f7874bb-c6aa-45ff-84b3-690cdb0ed8e0",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "33c318c8-f8dc-4e84-a081-2281e2e7a3b3",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "494a6c0f-449f-45e1-b52a-2c2aed01c355",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f174f4b6-252c-47ea-978e-0115b13b515f",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a66b84a5-5047-44b5-89a3-2326ae5e1efd",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "755df9ea-1837-40f1-aea4-1878023de759",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e7730cfd-495f-45e1-a2b0-422b47a0cfa5",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c0e0e7a4-078a-4bbf-b552-94e304e1aac8",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f8e63e16-a849-4312-8e02-fdf2cccce974",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d11f6f2f-1353-4efd-b015-d31117be4024",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b25e458e-ce92-4913-8c38-8dc160fec105",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "80940b64-cefb-4079-a885-7ca52e5514df",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "04add1c3-10f2-41a1-94d0-c956deb8c0d5",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "36c24699-3ae8-4513-a809-6ac9836be327",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f22a6985-9e2d-4d2c-b944-d25c6fec8e18",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2bc8795f-5ff1-48b2-95a4-e6837098652c",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "96e5a09b-596a-4917-8a8a-99e31f2213f1",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "993cc28e-b086-4d7a-ba51-6e583e1c0012",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "idp_link",
      "name": "Linking Identity Provider",
      "providerId": "idp_link",
      "enabled": true,
      "defaultAction": false,
      "priority": 110,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "saml.signature.algorithm": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "26.3.2",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
